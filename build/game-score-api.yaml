openapi: 3.0.0
info:
  title: Game Score Tracking API
  version: 0.0.1
  description: Ths is the design spec for an unimplemented game score tracking API. This API allows users to register, add friends, add games, submit scores, and view high scores. The API is designed to be used by a game client to track user scores and high scores for video games.

paths:
  /users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    get:
      summary: Get a list of users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}/friends:
    post:
      summary: Add a friend for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friendId:
                  type: string
      responses:
        '201':
          description: Friend added

    get:
      summary: Get friends list for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of friends
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /games:
    post:
      summary: Add a new game to the catalogue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGame'
      responses:
        '201':
          description: Game added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

    get:
      summary: Get a list of all games
      responses:
        '200':
          description: A list of games
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'

  /games/{gameId}/scores:
    post:
      summary: Submit a new score for a game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewScore'
      responses:
        '201':
          description: Score submitted

    get:
      summary: Get high scores for a game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: High scores list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Score'

components:
  schemas:
    NewUser:
      type: object
      required: [username, email, password]
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string

    User:
      type: object
      properties:
        uid:
          type: string
        username:
          type: string
        email:
          type: string
        joinDate:
          type: string
          format: date
        lastActiveDate:
          type: string
          format: date
        gamesPlayed:
          type: array
          items:
            $ref: '#/components/schemas/GameScore'
        friends:
          type: array
          items:
            type: string

    GameScore:
      type: object
      properties:
        gameId:
          type: string
        scores:
          type: array
          items:
            $ref: '#/components/schemas/Score'

    Score:
      type: object
      properties:
        scoreId:
          type: string
        userId:
          type: string
        score:
          type: integer
        dateAchieved:
          type: string
          format: date-time

    NewGame:
      type: object
      required: [title]
      properties:
        title:
          type: string
        description:
          type: string
        releaseDate:
          type: string
          format: date

    Game:
      type: object
      properties:
        gameId:
          type: string
        title:
          type: string
        description:
          type: string
        releaseDate:
          type: string
          format: date

    NewScore:
      type: object
      required: [userId, score]
      properties:
        userId:
          type: string
        score:
          type: integer
        dateAchieved:
          type: string
          format: date-time
